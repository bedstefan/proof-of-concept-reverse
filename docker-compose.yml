# Define a network named "internal" that is not connected to the default bridge network
networks:
  internal:
    internal: true

services:
  nginx:
    image: nginx:latest
    # Map port 80 on the host to port 80 in the container and port 9113 on the host to port 9113 in the container for prometheus monitoring
    ports:
      - 80:80
      - 9113:9113
    # Mount volumes for the website files, nginx configuration, and default configuration
    volumes:
      - ./website/html:/usr/share/nginx/html
      - ./website/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./website/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    # Always restart the container if it fails, its consideded mission critical
    restart: always
    # Connect to the internal network, its considered vulnerable
    networks:
      - internal
    # Add labels for Prometheus scraping
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=80"

  nginx-ssl:
    image: nginx:latest
    # Map port 8443 on the host to port 443 in the container and port 9114 on the host to port 9114 in the container for prometheus monitoring
    # The reverse is available via https://localhost:8443
    ports:
      - 8443:443
      - 9114:9114
    # Mount volumes for the SSL configuration, certificates, and default configuration
    # SSL key generated with openssl req -x509 -newkey rsa:2048 -nodes -keyout key.pem -out cert.pem -days 365 -subj "/C=US/ST=State/L=Local/O=Orgn/CN=localhost"
    volumes:
      - ./reverse/nginx-ssl.conf:/etc/nginx/nginx.conf:ro
      - ./reverse/cert.pem:/etc/nginx/ssl/cert.pem:ro
      - ./reverse/key.pem:/etc/nginx/ssl/key.pem:ro
      - ./reverse/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - nginx
    # Always restart the container if it fails, its consideded mission critical
    restart: always
    # Connect to both the internal and default networks
    networks:
      - internal
      - default
    # Add labels for Prometheus scraping
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=80"

  prometheus:
    # Use the bitnami/prometheus image, the most updated one
    image: bitnami/prometheus
    # Mount the Prometheus configuration file
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    # Run the Prometheus command with the configuration file we just mounted
    command: --config.file=/etc/prometheus/prometheus.yml
    # The Prometheus app is available on http://localhost:9090
    ports:
      - 9090:9090
    networks:
      - internal
      - default
    depends_on:
      - nginx
      - nginx-ssl
      
  grafana:
    image: grafana/grafana:latest
    # The Grafana app is available on http://localhost:3000, with the defaults admin/admin
    ports:
      - 3000:3000
    # Mount the Grafana provisioning directory, to save dashboards jsons
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - internal
      - default
    depends_on:
      - prometheus

  cadvisor:
    # Use the gcr.io/cadvisor/cadvisor image, the most updated one
    image: gcr.io/cadvisor/cadvisor
    # Mount volumes for the root filesystem, system files, Docker files, SSH configuration, and Fail2Ban configuration
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - ./ssh:/etc/ssh
      - ./ssh/start-ssh.sh:/start-ssh.sh
      - ./ssh/authorized_keys:/root/.ssh/authorized_keys
      - ./fail2ban/jail.local:/etc/fail2ban/jail.local
    # Run the SSH startup script
    command: sh -c "/start-ssh.sh"
    # Map port 8080 on the host to port 8080 in the container app and port 2224 on the host to port 22 in the container for sshd
    # The SSH server is available via: ssh -vvv -p 2224 root@localhost
    # The Cadvisor app is available on http://localhost:8080
    ports:
      - 8080:8080
      - 2224:22
    networks:
      - internal
      - default
    depends_on:
      - nginx
      - nginx-ssl
    

